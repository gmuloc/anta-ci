---
name: "Tag & Release management"
on:
  workflow_dispatch:
  release:
    types:
      - published
  # push:
  #   # Sequence of patterns matched against refs/tags
  #   tags:
  #   - 'v[0-9]+.[0-9]+.[0-9]+' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  release-doc:
    name: "Publish documentation for release ${{github.ref_name}}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 'Setup Python 3 on runner'
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Setup Git config
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: 'Build mkdocs content to site folder'
        run: |
          pip install -r ./docs/requirements.txt
          mike deploy --update-alias --push  ${{github.ref_name}} stable

  # pypi:
  #   name: Publish version to Pypi servers
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install setuptools wheel build
  #     - name: Build package
  #       run: |
  #         python -m build
  #     - name: Publish package to Pypi
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         user: __token__
  #         password: ${{ secrets.PYPI_API_TOKEN }}

  # docker:
  #   name: Docker Image Build
  #   runs-on: ubuntu-latest
  #   needs: [pypi]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Docker meta for TAG
  #       id: meta
  #       uses: docker/metadata-action@v4
  #       with:
  #         images: ghcr.io/${{ github.repository }}
  #         tags: |
  #           type=semver,pattern={{version}}
  #           type=raw,value=latest

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         file: Dockerfile
  #         push: true
  #         platforms: linux/amd64,linux/arm64,linux/arm/v7
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
